services:
  
  #### STUDIOMANAGER DATABASE ####
  studiomanager.database:
    image: postgres:latest
    container_name: studiomanager.database
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: P@ssw0rd
      POSTGRES_MULTIPLE_DATABASES: StudioManager #,Keycloak
    healthcheck:
      test: 'pg_isready -U postgres --dbname=StudioManager'
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./.containers/studiomanager-db:/var/lib/postgresql/data
      - ./pg-init-scripts:/docker-entrypoint-initdb.d
    restart: unless-stopped
  
  
  #### KEYCLOAK ####
  
#  studiomanager.keycloak:
#    image: quay.io/keycloak/keycloak:latest
#    container_name: studiomanager.keycloak
#    command: [ "start-dev", "--import-realm" ]
#    environment:
#      #KC_LOG_LEVEL: debug
#      KC_DB_VENDOR: postgres
#      KC_DB_ADDR: studiomanager.database
#      KC_DB_DATABASE: Keycloak
#      KC_DB_USER: postgres
#      KC_DB_PASSWORD: P@ssw0rd
#      
#      KEYCLOAK_ADMIN: admin
#      KEYCLOAK_ADMIN_PASSWORD: admin
#    ports:
#      - 8080:8080
#      - 8443:8443
#    links:
#      - studiomanager.database
#    depends_on:
#      studiomanager.database:
#        condition: service_started
#    volumes:
#      - ./.containers/realm.json:/opt/keycloak/data/import/realm.json:r
#    restart: unless-stopped
  
  #### API ####
  
  studiomanager.api:
    image: ${DOCKER_REGISTRY-}studiomanager.api
    container_name: studiomanager.api
    depends_on:
#      studiomanager.keycloak:
#        condition: service_started
      studiomanager.database:
        condition: service_started
    links:
      - studiomanager.database
#      - studiomanager.keycloak
    build:
      context: .
      dockerfile: StudioManager.API/Dockerfile
    ports:
      - 5000:5000
      - 5001:5001
    environment:
      - ASPNETCORE_URLS=http://+:5001
    restart: unless-stopped
